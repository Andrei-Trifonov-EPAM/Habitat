<!--
    Do not modify this configuration file.
    Instead, you should patch this file using Coveo.SearchProvider.Custom.config.
-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <events timingLevel="custom">
      <event name="item:deleting">
        <handler type="Coveo.SearchProvider.Events.SetupRequirementsEventHandler, Coveo.SearchProviderBase" method="OnItemDeleting" />
      </event>
      <event name="item:saved">
        <handler type="Coveo.SearchProvider.Events.SetupRequirementsEventHandler, Coveo.SearchProviderBase" method="OnItemSaved" />
      </event>
      <event name="user:created">
        <handler type="Coveo.SearchProvider.Events.EntityEventHandler, Coveo.SearchProviderBase" method="OnUserCreated"/>
      </event>
      <event name="user:updated">
        <handler type="Coveo.SearchProvider.Events.EntityEventHandler, Coveo.SearchProviderBase" method="OnUserUpdated"/>
      </event>
      <event name="user:deleted">
        <handler type="Coveo.SearchProvider.Events.EntityEventHandler, Coveo.SearchProviderBase" method="OnUserDeleted"/>
      </event>
      <event name="roles:usersAdded">
        <handler type="Coveo.SearchProvider.Events.EntityEventHandler, Coveo.SearchProviderBase" method="OnUsersAddedToRole"/>
      </event>
      <event name="roles:usersRemoved">
        <handler type="Coveo.SearchProvider.Events.EntityEventHandler, Coveo.SearchProviderBase" method="OnUsersRemovedFromRole"/>
      </event>
    </events>
    <factories>
      <factory id="remoteListFactory" type="Coveo.SearchProvider.RemoteListFactory, Coveo.SearchProviderBase" />
    </factories>
    <pipelines>
      <getContentEditorWarnings>
        <!-- The TopResultConfigurationWarningProcessor validates that a Top Result item is correctly configured -->
        <processor type="Coveo.SearchProvider.TopResults.TopResultConfigurationWarningProcessor, Coveo.SearchProviderBase" />
      </getContentEditorWarnings>
      <startAnalytics>
        <!-- The ExcludeCoveoUserAgentProcessor stops the pipeline if the request comes from the Coveo user agent -->
        <processor patch:before="*[1]" type="Coveo.Analytics.Processors.ExcludeCoveoUserAgentProcessor, Coveo.Analytics" />
      </startAnalytics>
      <!-- Pipeline receiving an item before it is processed for indexing -->
      <coveoItemProcessingPipeline>
      </coveoItemProcessingPipeline>
      <!-- Pipeline receiving an item after being processed and just before it is send to be indexed -->
      <coveoPostItemProcessingPipeline>
        <processor type="Coveo.SearchProvider.Processors.AddCoveoVersionTag, Coveo.SearchProviderBase" />
      </coveoPostItemProcessingPipeline>
      <!-- Pipeline to convert the fields from Sitecore to a format handled by Coveo -->
      <coveoFieldConverterPipeline>
        <processor type="Coveo.SearchProvider.Processors.SkipMetadataNamesProcessor, Coveo.SearchProviderBase" />
        <processor type="Coveo.SearchProvider.Processors.FieldValueConverterProcessor, Coveo.SearchProviderBase" />
      </coveoFieldConverterPipeline>
      <!-- Sitecore pipeline to get the index name corresponding to the currently selected item or context database.
           This pipeline can return search indexes from any provider. -->
      <contentSearch.getContextIndex>
        <processor type="Coveo.SearchProvider.Processors.FetchCoveoIndex, Coveo.SearchProviderBase" />
      </contentSearch.getContextIndex>
      <!-- Coveo pipeline used to retrieve the Coveo index name corresponding to the currently selected item or context database.
           This pipeline should only return names for the Coveo search indexes. -->
      <coveoGetContextCoveoIndex>
        <processor type="Coveo.SearchProvider.Processors.FetchCoveoIndexOnly, Coveo.SearchProvider" />
      </coveoGetContextCoveoIndex>
      <!-- Coveo pipeline used to retrieve the fields to index for a regular search index. -->
      <coveoIndexingGetFields>
        <!-- The AddSpecialFieldsProcessor adds Sitecore's built-in fields to the search index. -->
        <processor type="Coveo.AbstractLayer.Processors.Indexing.Fields.AddSpecialFieldsProcessor, Coveo.AbstractLayer" />
        <!-- The AddComputedFieldsProcessor adds the computed fields to the search index. -->
        <processor type="Coveo.AbstractLayer.Processors.Indexing.Fields.AddComputedFieldsProcessor, Coveo.AbstractLayer" />
        <!-- The IncludeFieldsFromConfigOnlyProcessor adds the included fields to the search index. If at least one included field is specified, the processor stops the pipeline. -->
        <processor type="Coveo.AbstractLayer.Processors.Indexing.Fields.IncludeFieldsFromConfigOnlyProcessor, Coveo.AbstractLayer" />
        <!-- The AddCoveoFieldsProcessor adds specific Coveo fields to the search index. -->
        <processor type="Coveo.AbstractLayer.Processors.Indexing.Fields.AddCoveoFieldsProcessor, Coveo.AbstractLayer" />
        <!-- The AddTemplateFieldsProcessor gets the fields from a list of templates and then adds them to the search index.
             The processor invokes the coveoIndexingGetTemplates pipeline to retrieve the templates. -->
        <processor type="Coveo.AbstractLayer.Processors.Indexing.Fields.AddTemplateFieldsProcessor, Coveo.AbstractLayer" />
        <!-- The AddAnalyticsFieldsProcessor adds fields related to Sitecore Analytics to the search index. Those fields are used by the personalization features. -->
        <processor type="Coveo.AbstractLayer.Processors.Indexing.Fields.AddAnalyticsFieldsProcessor, Coveo.AbstractLayer" />
        <!-- The AddExternalFieldsProcessor adds the fields declared in the ExternalFields element to the search index. -->
        <processor type="Coveo.AbstractLayer.Processors.Indexing.Fields.AddExternalFieldsProcessor, Coveo.AbstractLayer" />
        <!-- The AddFieldMapFieldsProcessor adds the fields declared in the field map to the search index. -->
        <processor type="Coveo.AbstractLayer.Processors.Indexing.Fields.AddFieldMapFieldsProcessor, Coveo.AbstractLayer" />
        <!-- The ExcludeFieldsFromConfigProcessor excludes the fields defined in the ExcludeField element from the search index. -->
        <processor type="Coveo.AbstractLayer.Processors.Indexing.Fields.ExcludeFieldsFromConfigProcessor, Coveo.AbstractLayer" />
      </coveoIndexingGetFields>
      <!-- Coveo pipeline used to retrieve the templates with the fields that should be indexed. -->
      <coveoIndexingGetTemplates>
        <!-- The IncludeTemplatesFromConfigOnlyProcessor adds the included templates to the list. If at least one included template is specified, the processor stops the pipeline. -->
        <processor type="Coveo.AbstractLayer.Processors.Indexing.Templates.IncludeTemplatesFromConfigOnlyProcessor, Coveo.AbstractLayer" />
        <!-- The AddAllTemplatesProcessor adds all templates to the list. -->
        <processor type="Coveo.AbstractLayer.Processors.Indexing.Templates.AddAllTemplatesProcessor, Coveo.AbstractLayer" />
        <!-- The ExcludeTemplatesFromConfigProcessor excludes the templates defined in the ExcludeTemplate element from the template list. -->
        <processor type="Coveo.AbstractLayer.Processors.Indexing.Templates.ExcludeTemplatesFromConfigProcessor, Coveo.AbstractLayer" />
      </coveoIndexingGetTemplates>
      <!-- Pipeline used to translate the field names from Sitecore to a format supported by Coveo -->
      <coveoFieldNameTranslatorPipeline>
        <processor type="Coveo.AbstractLayer.Pipeline.CoveoFieldNameTranslatorProcessor, Coveo.AbstractLayer" />
      </coveoFieldNameTranslatorPipeline>
      <!-- Pipeline used to automatically boost search results according to the Analytics data. -->
      <coveoAutomaticBoostingPipeline>
        <processor type="Coveo.SearchProvider.Processors.AutomaticBoostingProcessor, Coveo.SearchProviderBase" />
      </coveoAutomaticBoostingPipeline>
      <!-- Pipeline used to modify the Sitecore fields configuration before the field set is created/updated in CES. -->
      <coveoBeforeUpdatingIndexFields>
      </coveoBeforeUpdatingIndexFields>
      <!-- Pipeline used to modify the values of the LINQ results while they are mapped. -->
      <coveoMapLinqQueryResult>
        <processor type="Coveo.SearchProvider.Processors.Queries.MapCoveoMetadataProcessor, Coveo.SearchProviderBase" />
      </coveoMapLinqQueryResult>
      <!-- Pipeline used to specify which fields should be returned on LINQ queries results. -->
      <coveoQueryFieldPipeline>
        <processor type="Coveo.SearchProvider.Processors.Queries.AddAllFieldsProcessor, Coveo.SearchProviderBase" />
      </coveoQueryFieldPipeline>
      <!-- Pipeline used to resolve an item site. This pipeline is invoked when indexing documents to compute the item URI. -->
      <coveoResolveItemSite>
        <processor type="Coveo.SearchProvider.Processors.ResolveItemSiteProcessor, Coveo.SearchProviderBase" />
      </coveoResolveItemSite>
      <coveoResolveItemUniqueUri>
        <processor type="Coveo.SearchProvider.Processors.ResolveItemUniqueUriProcessor, Coveo.SearchProviderBase" />
      </coveoResolveItemUniqueUri>
      <!-- Each processor in this pipeline can use the following includedIndexNames and excludedIndexNames element. -->
      <!-- Add this to apply the processor only to the specified indexes. -->
      <!-- <includedIndexNames hint="list">
             <indexName>Coveo_web_index</indexName>
           </includedIndexNames> -->
      <!-- Add this to apply the processor to all indexes but those specified in the list. -->
      <!-- <excludedIndexNames hint="list">
             <indexName>Coveo_master_index</indexName>
           </excludedIndexNames> -->
      <!-- Exclusion has priority over inclusion. This means that if the same index is specified both in inclusion and exclusion, the processor won't be applied. -->
      <coveoInboundFilterPipeline>
        <processor type="Coveo.SearchProvider.InboundFilters.ApplySitecoreInboundFilterProcessor, Coveo.SearchProviderBase" />
        <!-- This processor ensures that only the latest version of a Sitecore item is indexed. -->
        <processor type="Coveo.SearchProvider.CoveoInboundFilters.IndexLatestVersionInboundFilter, Coveo.SearchProviderBase" />
        <!-- This processor executes the processors located in the coveoSitecoreInboundFilterPipeline pipeline below. -->
        <processor type="Coveo.SearchProvider.InboundFilters.InvokeSitecoreInboundFilterPipeline, Coveo.SearchProviderBase" />
      </coveoInboundFilterPipeline>
      <!-- Pipeline used to execute Sitecore inbound filter processors. This pipeline is run by the InvokeSitecoreInboundFilterPipeline processor in the coveoInboundFilterPipeline pipeline. -->
      <!-- Add your existing Sitecore inbound filter processors to be run only on Coveo indexes. -->
      <coveoSitecoreInboundFilterPipeline>
      </coveoSitecoreInboundFilterPipeline>
      <coveoResolveTextWithTokens>
        <processor type="Coveo.UI.PipelineProcessors.ResolveTextWithTokens.MasterVariablesTokensProcessor, Coveo.UIBase" />
        <processor type="Coveo.UI.PipelineProcessors.ResolveTextWithTokens.GuidTokenProcessor, Coveo.UIBase" />
      </coveoResolveTextWithTokens>
    </pipelines>
    <coveo>
      <caches>
        <fieldsCache type="Coveo.Framework.Caching.FieldsCache, Coveo.Framework" singleInstance="true" />
      </caches>
      <cesCommunicationFactory type="Coveo.AbstractLayer.Communication.CES.CESCommunicationFactory, Coveo.AbstractLayer">
        <cesCommunicationConfiguration type="Coveo.AbstractLayer.Communication.CES.CesCommunicationConfiguration, Coveo.AbstractLayer" />
      </cesCommunicationFactory>
      <cloudPlatformCommunicationFactory type="Coveo.CloudPlatformClient.Communication.CloudPlatformCommunicationFactory, Coveo.CloudPlatformClient">
        <cloudCommunicationConfiguration type="Coveo.CloudPlatformClient.Configuration.CloudCommunicationConfiguration, Coveo.CloudPlatformClient" />
      </cloudPlatformCommunicationFactory>
      <defaultIndexConfiguration type="Coveo.AbstractLayer.CoveoDefaultIndexConfiguration, Coveo.AbstractLayer">
        <param desc="coveoReflectionFactory" type="Coveo.Framework.Utils.CoveoReflectionFactory, Coveo.Framework" />
        <indexCommunicationFactory ref="coveo/cesCommunicationFactory"/>
        <cloudPlatformConfiguration ref="coveo/cloudPlatformConfiguration"/>
        <!-- Coveo AdminService configuration -->
        <adminServiceConfiguration type="Coveo.Framework.Configuration.AdminServiceConfiguration, Coveo.Framework">
          <adminServiceUri>http://localhost/AdminService</adminServiceUri>
          <cesMasterInformation type="Coveo.Framework.Configuration.CesMasterInformation, Coveo.Framework">
            <cesConfigurationPath>C:\CES7\</cesConfigurationPath>
            <id>default</id>
            <acceptedConnections hint="list:AddAcceptedConnection">
              <cesAcceptedConnection type="Coveo.Framework.Configuration.CesAcceptedConnection, Coveo.Framework">
                <connectionComponent>ADMIN</connectionComponent>
                <connectionPort>52800</connectionPort>
                <connectionType>CMF</connectionType>
              </cesAcceptedConnection>
              <cesAcceptedConnection type="Coveo.Framework.Configuration.CesAcceptedConnection, Coveo.Framework">
                <connectionComponent>ADMIN</connectionComponent>
                <connectionPort>52810</connectionPort>
                <connectionType>HTTPS</connectionType>
              </cesAcceptedConnection>
            </acceptedConnections>
          </cesMasterInformation>
          <!-- The username element allows to specify the username used to connect to the AdminService. -->
          <username></username>
          <!-- The password element allows to specify the password used to connect to the AdminService. -->
          <password></password>
        </adminServiceConfiguration>
        <!-- Coveo Query configuration -->
        <queryConfiguration type="Coveo.Framework.Configuration.QueryConfiguration, Coveo.Framework">
          <!-- The defaultNumberOfResults element defines the default maximum number of results that are returned from a LINQ statement. -->
          <defaultNumberOfResults>10</defaultNumberOfResults>
          <!-- The defaultNumberOfFacetValues element defines the default maximum number of facet values that are returned from a LINQ statement. -->
          <defaultNumberOfFacetValues>16</defaultNumberOfFacetValues>
          <!-- The enableDuplicateFiltering element defines whether duplicates should be filtered by the index in queries. -->
          <enableDuplicateFiltering>false</enableDuplicateFiltering>
          <!-- The enableSitecoreBoosting element defines whether Sitecore boosting should be used in queries. -->
          <enableSitecoreBoosting>true</enableSitecoreBoosting>
          <!-- The expandQueries element defines whether to expand queries (i.e. uses the thesaurus). -->
          <expandQueries>true</expandQueries>
          <!-- The excerptLength element defines the maximum length (in number of characters) of the document's excerpt. -->
          <excerptLength>200</excerptLength>
          <!-- The queryPipelineName element defines the query pipeline name to use in queries. Leave this field empty to use the default query pipeline. -->
          <queryPipelineName></queryPipelineName>
          <!-- The retrieveFirstSentences element defines whether the first sentences of the document's content are returned. The length of the first sentences
               is defined by the excerptLength element. -->
          <retrieveFirstSentences>false</retrieveFirstSentences>
          <!-- The summaryLength element defines the maximum length (in number of characters) of the document's summary. -->
          <summaryLength>0</summaryLength>
        </queryConfiguration>
        <indexAllFields>true</indexAllFields>
        <!-- This setting must be set to 'true' in order to index profile-related fields. These fields are mandatory for automatic boosting to work properly.
              Otherwise, set it to 'false' to prevent those fields from being indexed. One benefit of this is that indexing speed and query time will improve. -->
        <indexAnalyticsFields>false</indexAnalyticsFields>
        <!-- Set this to false if you want to disable indexing of Coveo-specific fields. -->
        <indexCoveoFields>true</indexCoveoFields>
        <!-- Set this to true if you want referrer items to be indexed on an item update -->
        <indexReferrerItemsOnUpdate>false</indexReferrerItemsOnUpdate>
        <!-- Coveo search configuration -->
        <searchCertificatePath>C:\CES7\Config\Certificates\cert-iis.p12</searchCertificatePath>
        <searchServiceUri>https://localhost:52810/7.0/CoveoSearchService</searchServiceUri>
        <queueUri>amqp://localhost:5682/</queueUri>
        <queueUsername>guest</queueUsername>
        <encryptDataOnQueue>false</encryptDataOnQueue>
        <!-- The farmName element allows to specify the name that represents the Sitecore environment.
             When specified, this name is used to uniquely name various resources such as the index sources,
             fieldsets, security provider and user identity. -->
        <farmName></farmName>
        <!-- The requirementsInvalidateDelay elements allows to set the amount of time, in seconds, before the
              index requirements are invalidated. The index requirements includes the index sources, the fieldsets, security provider and user identity. -->
        <requirementsInvalidateDelay>60</requirementsInvalidateDelay>
        <!-- The securityProviderName element allows to set a static name for the CES security provider. This is useful when many Sitecore instances
              are querying the same Coveo indexes. It is often required when configuring Content Management and Content Delivery instances. -->
        <securityProviderName></securityProviderName>
        <!-- The activeDirectorySecurityProviderName element allows to set a static name for the Active Directory security provider
             This element is only available in the Cloud version. -->
        <activeDirectorySecurityProviderName>Coveo for Sitecore Active Directory</activeDirectorySecurityProviderName>
        <!-- The sitecoreUsername element allows to specify the user identity used by the CES security provider. -->
        <sitecoreUsername>sitecore\admin</sitecoreUsername>
        <!-- The serverUrl element allows to specify the URL where other hosts can connect to the Sitecore instance.
              This should be specified when CES is on a separate host than the Sitecore instance. -->
        <serverUrl></serverUrl>
        <!-- Should index Initialize() method be called as soon as the index is added or wait for an external trigger. -->
        <initializeOnAdd>true</initializeOnAdd>
        <fieldReaders type="Sitecore.ContentSearch.FieldReaders.FieldReaderMap, Sitecore.ContentSearch">
          <mapFieldByTypeName hint="raw:AddFieldReaderByFieldTypeName">
            <fieldReader fieldTypeName="checkbox" fieldReaderType="Sitecore.ContentSearch.FieldReaders.CheckboxFieldReader, Sitecore.ContentSearch" />
            <fieldReader fieldTypeName="datetime" fieldReaderType="Coveo.SearchProvider.FieldReaders.DateTimeFieldReader, Coveo.SearchProviderBase" />
            <fieldReader fieldTypeName="date" fieldReaderType="Coveo.SearchProvider.FieldReaders.DateFieldReader, Coveo.SearchProviderBase" />
          </mapFieldByTypeName>
        </fieldReaders>
        <fieldMap type="Coveo.SearchProvider.CoveoFieldMap, Coveo.SearchProvider">
          <param desc="coveoReflectionFactory" type="Coveo.Framework.Utils.CoveoReflectionFactory, Coveo.Framework" />
          <fieldNames hint="raw:AddFieldByFieldName">
            <fieldType fieldName="_id" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework" type="Sitecore.Data.ID, Sitecore.Kernel" returnType="System.String" />
            <fieldType fieldName="_uniqueid" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework" type="Sitecore.Data.ItemUri, Sitecore.Kernel" returnType="System.String" />
            <fieldType fieldName="name" isFacet="true" isSortable="true" includeForFreeTextSearch="true" isMultiValue="false" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework" />
            <fieldType fieldName="fullpath" isSortable="false" isFacet="true" includeForFreeTextSearch="false" isMultiValue="false" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework" />
            <fieldType fieldName="_fullpath" isSortable="false" isFacet="true" includeForFreeTextSearch="false" isMultiValue="false" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework" />
            <fieldType fieldName="_group" isSortable="false" isFacet="true" includeForFreeTextSearch="false" isMultiValue="false" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework" />
            <fieldType fieldName="_name" isFacet="true" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework" />
            <fieldType fieldName="_displayname" isFacet="true" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework" />
            <fieldType fieldName="_path" isFacet="true" isMultiValue="true" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework" />
            <fieldType fieldName="_content" isFacet="true" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework" />
            <fieldType fieldName="alltemplates" isMultiValue="true" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework" />
            <fieldType fieldName="__smallcreateddate" sitecoreFormat="yyyyMMddTHHmmZ" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework" />
            <fieldType fieldName="__smallupdateddate" sitecoreFormat="yyyyMMddTHHmmZ" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework" />
            <fieldType fieldName="hasLayout" useForRanking="false" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework" />
            <fieldType fieldName="isMediaItem" useForRanking="false" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework" />
            <fieldType fieldName="site" isMultiValue="true" settingType="Coveo.Framework.Configuration.FieldConfiguration, Coveo.Framework" />
          </fieldNames>
          <!-- Fields in this section are fields that doesn't exist on Sitecore items, but exist in CES or in external sources. -->
          <externalFields hint="raw:AddExternalField">
            <field fieldName="sysauthor" />
            <field fieldName="syscollection" />
            <field fieldName="sysconcepts" />
            <field fieldName="sysdate" />
            <field fieldName="syssource" />
            <field fieldName="sysrowid" />
          </externalFields>
        </fieldMap>
        <indexFieldStorageValueFormatter type="Coveo.SearchProvider.CoveoIndexFieldStorageValueFormatter, Coveo.SearchProvider" >
          <param desc="coveoReflectionFactory" type="Coveo.Framework.Utils.CoveoReflectionFactory, Coveo.Framework" />
          <conversionTypes hint="raw:AddConverter">
            <conversionType inputType="System.Guid" type="Sitecore.ContentSearch.Converters.IndexFieldGuidValueConverter, Sitecore.ContentSearch" />
            <conversionType inputType="Sitecore.Data.ID" type="Sitecore.ContentSearch.Converters.IndexFieldIDValueConverter, Sitecore.ContentSearch" />
            <conversionType inputType="Sitecore.ContentSearch.SitecoreItemId" type="Sitecore.ContentSearch.Converters.IndexFieldSitecoreItemIDValueConvertor, Sitecore.ContentSearch">
              <param type="Sitecore.ContentSearch.Converters.IndexFieldIDValueConverter, Sitecore.ContentSearch" />
            </conversionType>
            <conversionType inputType="Sitecore.ContentSearch.SitecoreItemUniqueId" type="Sitecore.ContentSearch.Converters.IndexFieldSitecoreItemUniqueIDValueConvertor, Sitecore.ContentSearch">
              <param type="Sitecore.ContentSearch.Converters.IndexFieldItemUriValueConvertor, Sitecore.ContentSearch" />
            </conversionType>
            <conversionType inputType="Sitecore.Data.ItemUri" type="Sitecore.ContentSearch.Converters.IndexFieldItemUriValueConvertor, Sitecore.ContentSearch" />
            <conversionType inputType="Sitecore.Data.ShortID" type="Sitecore.ContentSearch.Converters.IndexFieldShortIDValueConverter, Sitecore.ContentSearch" />
            <conversionType inputType="System.Globalization.CultureInfo" type="Sitecore.ContentSearch.Converters.IndexFieldCultureInfoValueConverter, Sitecore.ContentSearch" />
            <conversionType inputType="Sitecore.ContentSearch.IIndexableId, Sitecore.ContentSearch" type="Sitecore.ContentSearch.Converters.IndexableIdConverter, Sitecore.ContentSearch" />
            <conversionType inputType="Sitecore.ContentSearch.IIndexableUniqueId, Sitecore.ContentSearch" type="Sitecore.ContentSearch.Converters.IndexableUniqueIdConverter, Sitecore.ContentSearch" />
            <conversionType inputType="System.DateTimeOffset" type="Coveo.Framework.Conversion.DateTimeOffsetValueConverter, Coveo.Framework" />
            <conversionType inputType="System.TimeSpan" type="Coveo.Framework.Conversion.TimeSpanValueConverter, Coveo.Framework" />
            <conversionType inputType="System.DateTime" type="Coveo.Framework.Conversion.DateTimeValueConverter, Coveo.Framework" />
            <conversionType inputType="System.Boolean" type="Coveo.Framework.Conversion.BooleanValueConverter, Coveo.Framework" />
            <conversionType inputType="System.Single" type="Coveo.Framework.Conversion.FloatValueConverter, Coveo.Framework" />
            <conversionType inputType="System.Decimal" type="Coveo.Framework.Conversion.DecimalValueConverter, Coveo.Framework" />
            <conversionType inputType="System.Double" type="Coveo.Framework.Conversion.DoubleValueConverter, Coveo.Framework" />
          </conversionTypes>
        </indexFieldStorageValueFormatter>
        <virtualFields type="Sitecore.ContentSearch.VirtualFieldProcessorMap, Sitecore.ContentSearch">
          <processors hint="raw:AddFromConfiguration">
          <virtualFieldProcessor fieldName="daterange" type="Sitecore.ContentSearch.VirtualFields.DateRangeFieldProcessor, Sitecore.ContentSearch" />
          <virtualFieldProcessor fieldName="_lastestversion" type="Sitecore.ContentSearch.VirtualFields.LatestVersionFieldProcessor, Sitecore.ContentSearch" />
          <virtualFieldProcessor fieldName="_url" type="Sitecore.ContentSearch.VirtualFields.UniqueIdFieldProcessor, Sitecore.ContentSearch" />
          <virtualFieldProcessor fieldName="_content" type="Coveo.SearchProvider.Processors.ContentFieldProcessor, Coveo.SearchProviderBase" />
          </processors>
        </virtualFields>
        <documentOptions type="Sitecore.ContentSearch.DocumentBuilderOptions, Sitecore.ContentSearch">
          <IndexAllFields>true</IndexAllFields>
          <fields hint="raw:AddComputedIndexField">
            <field fieldName="calculateddimension">Sitecore.ContentSearch.ComputedFields.CalculatedDimension,Sitecore.ContentSearch</field>
            <field fieldName="istemplate">Sitecore.ContentSearch.ComputedFields.IsTemplate,Sitecore.ContentSearch</field>
            <field fieldName="haschildren">Sitecore.ContentSearch.ComputedFields.HasChildren,Sitecore.ContentSearch</field>
            <field fieldName="lock">Sitecore.ContentSearch.ComputedFields.IsLocked,Sitecore.ContentSearch</field>
            <field fieldName="parsedcreatedby">Sitecore.ContentSearch.ComputedFields.ParsedCreatedBy,Sitecore.ContentSearch</field>
            <field fieldName="parsedupdatedby">Sitecore.ContentSearch.ComputedFields.ParsedUpdatedBy,Sitecore.ContentSearch</field>
            <field fieldName="parsedlanguage">Sitecore.ContentSearch.ComputedFields.ParsedLanguage,Sitecore.ContentSearch</field>
            <field fieldName="site">Sitecore.ContentSearch.ComputedFields.Site,Sitecore.ContentSearch</field>
            <field fieldName="sizerange">Sitecore.ContentSearch.ComputedFields.FileSizeGrouping,Sitecore.ContentSearch</field>
            <field fieldName="version">Sitecore.ContentSearch.ComputedFields.StoreVersionTermVector,Sitecore.ContentSearch</field>
            <field fieldName="urllink">Sitecore.ContentSearch.ComputedFields.UrlLink,Sitecore.ContentSearch</field>
            <field fieldName="isbucket_text">Sitecore.ContentSearch.ComputedFields.IsBucket,Sitecore.ContentSearch</field>
            <field fieldName="alltemplates">Sitecore.ContentSearch.ComputedFields.AllTemplates, Sitecore.ContentSearch</field>
          </fields>
          <exclude hint="list:AddExcludedTemplate">
            <mediaFolder>{FE5DD826-48C6-436D-B87A-7C4210C7413B}</mediaFolder>
            <bucketFolder>{ADB6CA4F-03EF-4F47-B9AC-9CE2BA53FF97}</bucketFolder>
          </exclude>
          <exclude hint="list:AddExcludedField" ref="contentSearch/indexConfigurations/defaultLuceneIndexConfiguration/documentOptions//exclude[@hint='list:AddExcludedField']" factory="remoteListFactory"/>
        </documentOptions>
        <searchServiceProvider type="Coveo.SearchServiceProvider.Rest.ClientSessionWrapperFactory, Coveo.SearchServiceProvider.Rest" />
        <securityConfiguration type="Coveo.Framework.Configuration.SecurityConfiguration, Coveo.Framework">
          <indexPermissions>false</indexPermissions>
        </securityConfiguration>
    </defaultIndexConfiguration>
    </coveo>
    <contentSearch>
      <configuration>
        <indexes hint="list:AddIndex">
          <index id="Coveo_master_index" type="Coveo.SearchProvider.ProviderIndex, Coveo.SearchProvider" patch:before = "*[1]">
            <param desc="p_Name">$(id)</param>
            <configuration ref="coveo/defaultIndexConfiguration">
              <queryConfiguration ref="coveo/defaultIndexConfiguration/queryConfiguration">
                <!-- The maximumAge element defines the delay that query results are cached before being refreshed by a new query on the index. -->
                <maximumAge>00:00:00</maximumAge>
              </queryConfiguration>
            </configuration>
            <locations hint="list:AddCrawler">
              <crawler name="ContentCrawler" type="Sitecore.ContentSearch.SitecoreItemCrawler, Sitecore.ContentSearch">
                <database>master</database>
                <root>/sitecore/content</root>
                <stopOnError>true</stopOnError>
              </crawler>
              <crawler name="MediaLibraryCrawler" type="Sitecore.ContentSearch.SitecoreItemCrawler, Sitecore.ContentSearch">
                <database>master</database>
                <root>/sitecore/media library/files</root>
                <stopOnError>true</stopOnError>
              </crawler>
            </locations>
            <strategies hint="list:AddStrategy">
              <strategy ref="contentSearch/indexConfigurations/indexUpdateStrategies/syncMaster"/>
            </strategies>
            <propertyStore ref="contentSearch/indexConfigurations/databasePropertyStore" param1="$(id)"/>
          </index>
          <index id="Coveo_web_index" type="Coveo.SearchProvider.ProviderIndex, Coveo.SearchProvider" patch:before = "*[2]">
            <param desc="p_Name">$(id)</param>
            <configuration ref="coveo/defaultIndexConfiguration" />
            <locations hint="list:AddCrawler">
              <crawler name="ContentCrawler" type="Sitecore.ContentSearch.SitecoreItemCrawler, Sitecore.ContentSearch">
                <database>web</database>
                <root>/sitecore/content</root>
                <stopOnError>true</stopOnError>
              </crawler>
              <crawler name="MediaLibraryCrawler" type="Sitecore.ContentSearch.SitecoreItemCrawler, Sitecore.ContentSearch">
                <database>web</database>
                <root>/sitecore/media library/files</root>
                <stopOnError>true</stopOnError>
              </crawler>
            </locations>
            <strategies hint="list:AddStrategy">
              <strategy ref="contentSearch/indexConfigurations/indexUpdateStrategies/onPublishEndAsync"/>
            </strategies>
            <propertyStore ref="contentSearch/indexConfigurations/databasePropertyStore" param1="$(id)"/>
          </index>
        </indexes>
      </configuration>
    </contentSearch>
    <scheduling>
      <agent name="CoveoSynchronizeTopResults" type="Coveo.SearchProvider.Agents.SynchronizeTopResults, Coveo.SearchProviderBase" method="Run" interval="00:01:00">
        <DatabasesToSynchronize>master;web</DatabasesToSynchronize>
      </agent>
    </scheduling>
    <settings>
      <setting name="Coveo.TopResults.FolderPath" value="/sitecore/system/Modules/Coveo/Top Results" />
    </settings>
    <sites>
      <!-- The site coveorest needs to be inserted as the first element, or before any other sites that have the coveorest site as a child (e.g. sites defined with virtualpath="/"). -->
      <site patch:before="*[1]" name="coveorest" virtualFolder="/coveo/rest" physicalFolder="/coveo/rest" enableTracking="false" database="web" domain="extranet" />
      <!-- The site coveoanalytics needs to be inserted before coveorest, because it requires analytics to be enabled. -->
      <site patch:before="*[1]" name="coveoanalytics" virtualFolder="/coveo/rest/v6/analytics" enableTracking="true" database="web" domain="extranet" />
      <site patch:before="*[1]" name="coveo_website" virtualFolder="/sitecore modules/Web/Coveo" physicalFolder="/sitecore modules/Web/Coveo" rootPath="/sitecore/content" startItem="/home" language="en" database="web" domain="extranet" allowDebug="true" cacheHtml="true" loginPage="/sitecore/login" />
    </sites>
  </sitecore>
</configuration>