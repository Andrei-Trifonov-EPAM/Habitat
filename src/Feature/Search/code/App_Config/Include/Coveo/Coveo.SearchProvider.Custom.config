<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <pipelines>
      <!--
         Pipeline used to specify which fields should be returned on LINQ queries results.
         By default, the AddAllFieldsProcessor will return all fields. Comment this pipeline and uncomment the others to specify basic fields.
         The AddAllFieldsProcessor will also stop the pipeline execution.
      -->
      <coveoQueryFieldPipeline>
        <!--
          <processor type="Coveo.SearchProvider.Processors.Queries.AddAllFieldsProcessor, Coveo.SearchProviderBase">
            <patch:delete />
          </processor>
          <processor type="Coveo.SearchProvider.Processors.Queries.AddBasicFieldsProcessor, Coveo.SearchProviderBase" />
          <processor type="Coveo.SearchProvider.Processors.Queries.AddVirtualFieldsProcessor, Coveo.SearchProviderBase" />
          <processor type="Coveo.SearchProvider.Processors.Queries.AddFieldsRelatedToSearchTypeProcessor, Coveo.SearchProviderBase" />
        -->
      </coveoQueryFieldPipeline>
      <coveoInboundFilterPipeline>
        <processor type="Coveo.SearchProvider.InboundFilters.ApplySitecoreInboundFilterProcessor, Coveo.SearchProviderBase">
          <!-- Uncomment this to apply the processor only to the specified indexes. -->
          <!--
            <includedIndexNames hint="list">
              <indexName>Coveo_web_index</indexName>
            </includedIndexNames>
          -->
          <!-- Uncomment this to apply the processor to all indexes but those specified in the list. -->
          <!--
            <excludedIndexNames hint="list">
              <indexName>Coveo_master_index</indexName>
            </excludedIndexNames>
          -->
          <!-- Exclusion has priority over inclusion. This means that if the same index is specified both in inclusion and exclusion, the processor won't be applied. -->
        </processor>
      </coveoInboundFilterPipeline>
    </pipelines>
    <coveo>
      <defaultIndexConfiguration>
        <documentOptions>
          <fields hint="raw:AddComputedIndexField">
            <!-- Uncomment the culture field if the revision number of your Sitecore instance is greater than 150400. -->
            
              <field fieldName="culture">Sitecore.ContentSearch.ComputedFields.Culture,Sitecore.ContentSearch</field>
            
            <!-- Those are examples of built in Coveo computed fields. Use them to compute an image URL or alt from an image field. -->
            
              <field fieldName="imageUrl" sourceField="Image">Coveo.SearchProvider.ComputedFields.ImageUrlComputedField, Coveo.SearchProviderBase</field>
              <field fieldName="imageAlt" sourceField="Image">Coveo.SearchProvider.ComputedFields.ImageAltComputedField, Coveo.SearchProviderBase</field>
            
            <!-- This is another example of built in Coveo computed fields. Use it to get any value from a referenced field.
                 Supported attributes, fieldName: The new field to create.
                                       sourceField: The field containing the referenced item id.
                                       referencedFieldName: Name of the field on the referenced item.
                                       returnType: The type of the field. Default is string. -->
            <!--
              <field fieldName="theNewFieldToCreate" sourceField="theReferencedFieldId" referencedFieldName="referencedField">Coveo.SearchProvider.ComputedFields.ReferencedFieldComputedField, Coveo.SearchProviderBase</field>
            -->
          </fields>
        </documentOptions>
        <indexCommunicationFactory ref="coveo/cloudPlatformCommunicationFactory" />
        <sitecorePassword>KuCScVngwdKxf/MWZdzdVw==</sitecorePassword>
        <sitecoreUsername>sitecore\admin</sitecoreUsername>
      </defaultIndexConfiguration>
    </coveo>
    <!-- Example of Coveo for Sitecore log4net configuration.
         Uncomment the log4net configuration below to enable Coveo logging.

         CoveoLogger appender conversionPattern description:
            %4t: Thread name or number, left padded with spaces if less than 4 characters.
            %d{ABSOLUTE}: Time, in the local time zone, when the logging event was generated.
            %l: Location in the code where the logging event was generated.
            %-5p: All the properties of the logging event, right padded with spaces if less than 5 characters.
            %m: Message of the logging event.
            %n: New line character.

         Coveo logger:
            Default level is INFO.
            Performance degradation is expected at DEBUG level due to the large quantity of logs generated and the "%l" in the appender's conversionPattern.
            If you need to run at DEBUG level for a long period of time, consider removing "%l" from the appender's conversionPattern for better performance.

    -->
    <!--
      <log4net>
        <appender name="CoveoLogger" type="log4net.Appender.RollingFileAppender, Sitecore.Logging">
          <file value="$(dataFolder)/logs/Coveo.Search" />
          <appendToFile value="true" />
          <rollingStyle value="Composite" />
          <datePattern value=".yyyyMMdd'.txt'" />
          <staticLogFileName value="false" />
          <maxSizeRollBackups value="20" />
          <maximumFileSize value="250MB" />
          <layout type="log4net.Layout.PatternLayout">
            <conversionPattern value="%4t %d{ABSOLUTE} %l %-5p %m%n" />
          </layout>
        </appender>
        <logger name="Coveo" additivity="false">
          <level value="INFO" />
          <appender-ref ref="CoveoLogger" />
        </logger>
      </log4net>
    -->
    <scheduling>
      <agent name="CoveoSynchronizeTopResults">
        <patch:delete />
      </agent>
    </scheduling>
  </sitecore>
</configuration>